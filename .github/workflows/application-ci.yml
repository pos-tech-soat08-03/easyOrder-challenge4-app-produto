name: Application CI - Verificar Dependencias e Buildar, avaliando cobertura de Testes e qualidade com SonarCloud

on:
  push:
    branches:
      - "feature/*"
      - "hotfix/*"
      - "chore/*"
  pull_request:    
    branches:
      - "main"        
  
permissions:
  pull-requests: read # allows SonarCloud to decorate PRs with analysis results

jobs:
  lint-and-build:
    name: Code Check Dependencies and Build
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout do repositório
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Configuração do Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Step 3: Instalar dependências
      - name: Install dependencies
        run: npm install

      # Step 5: Compilação do código TypeScript
      - name: Build project
        run: npm run build

      # Step 6: Executar testes
      - name: Run tests with coverage
        run: npm run test-coverage

      # Listar arquivos no diretório de cobertura
      - name: List coverage directory
        run: ls -l coverage

      # Step 7: Analisar com SonarCloud
      - name: Analyze with SonarCloud

        # You can pin the exact commit or the version.
        # uses: SonarSource/sonarcloud-github-action@v2.2.0
        uses: SonarSource/sonarcloud-github-action@4006f663ecaf1f8093e8e4abb9227f6041f52216
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on Sonarcloud.io, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
        with:
          # Additional arguments for the SonarScanner CLI
          args: |
            # Unique keys of your project and organization. You can find them in SonarCloud > Information (bottom-left menu)
            # mandatory
            -Dsonar.projectKey=pos-tech-soat08-03_easyOrder-challenge4-app-produto
            -Dsonar.organization=pos-tech-soat08-03
            # Comma-separated paths to directories containing main source files.
            #-Dsonar.sources=./src
            # Comma-separated paths to directories containing test source files.
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            #-Dsonar.tests=./src/test
            # optional. For more info about Code Coverage, please refer to https://docs.sonarcloud.io/enriching/test-coverage/overview/
            # Adds more detail to both client and server-side analysis logs, activating DEBUG mode for the scanner, and adding client-side environment variables and system properties to the server-side log of analysis report processing.
            #-Dsonar.verbose= # optional, default is false
          # When you need the analysis to take place in a directory other than the one from which it was launched, default is .
          projectBaseDir: .
